name: Build Extension

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]
  workflow_dispatch:

permissions:
  contents: write
  pull-requests: write

jobs:
  build:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./extension

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Setup Bun
        uses: oven-sh/setup-bun@v1

      - name: Install dependencies
        run: bun install

      - name: Build extension
        run: bun run build

      - name: Create release ZIP
        run: |
          # Create a temporary directory for packaging
          mkdir release_package
          # Copy built files from dist
          cp -r dist/* release_package/
          # Copy manifest and icons
          cp manifest.json release_package/
          cp -r icons release_package/
          # Create ZIP from the properly structured directory
          cd release_package
          zip -r ../extension.zip ./*
          cd ..
          # Cleanup
          rm -rf release_package

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: v${{ github.run_number }}
          release_name: Release v${{ github.run_number }}
          draft: false
          prerelease: false

      - name: Upload Release Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./extension/extension.zip
          asset_name: brainrot-copilot-v${{ github.run_number }}.zip
          asset_content_type: application/zip
